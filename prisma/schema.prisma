// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Village {
  id         Int    @id @default(autoincrement())
  name       String
  population Int
  description String?

  villageFeatures VillageFeature[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VillageFeature {
  id        Int     @id @default(autoincrement())
  village   Village @relation(fields: [villageId], references: [id])
  villageId Int
  feature   Feature @relation(fields: [featureId], references: [id])
  featureId Int

  villageFeaturePositions VillageFeaturePosition[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VillageFeaturePosition {
  id            Int    @id @default(autoincrement())
  characterName String

  position   Position @relation(fields: [positionId], references: [id])
  positionId Int

  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  VillageFeature   VillageFeature? @relation(fields: [villageFeatureId], references: [id])
  villageFeatureId Int?
}

model Feature {
  id               Int              @id @default(autoincrement())
  name             String
  positions        Position[]
  populationNeeded Int
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  VillageFeature   VillageFeature[]
}

model Position {
  id                     Int                      @id @default(autoincrement())
  name                   String
  feature                Feature                  @relation(fields: [featureId], references: [id])
  featureId              Int
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  VillageFeaturePosition VillageFeaturePosition[]
}

model MaleFirstName {
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FemaleFirstName {
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LastName {
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
